"use strict";(self.webpackChunkviolet_eco_github_io=self.webpackChunkviolet_eco_github_io||[]).push([[2758],{3905:(e,t,i)=>{i.d(t,{Zo:()=>c,kt:()=>f});var n=i(7294);function o(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function r(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){o(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,o=function(e,t){if(null==e)return{};var i,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(o[i]=e[i]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):r(r({},t),e)),i},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var i=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(i),d=o,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return i?n.createElement(f,r(r({ref:t},c),{},{components:i})):n.createElement(f,r({ref:t},c))}));function f(e,t){var i=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=i.length,r=new Array(a);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:o,r[1]=l;for(var p=2;p<a;p++)r[p]=i[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,i)}d.displayName="MDXCreateElement"},9671:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var n=i(7462),o=(i(7294),i(3905));const a={slug:"pre-compiling",sidebar_position:5,description:"With pre-compilation, Violet apps naturally become multiplatform and can run smoothly on different operating systems including Windows, Linux, macOS and more."},r="Pre-Compiling",l={unversionedId:"technical/pre-compiling",id:"technical/pre-compiling",title:"Pre-Compiling",description:"With pre-compilation, Violet apps naturally become multiplatform and can run smoothly on different operating systems including Windows, Linux, macOS and more.",source:"@site/docs/technical/pre-compiling.md",sourceDirName:"technical",slug:"/technical/pre-compiling",permalink:"/docs/technical/pre-compiling",draft:!1,editUrl:"https://github.com/violet-eco/docs/tree/main/docs/docs/technical/pre-compiling.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{slug:"pre-compiling",sidebar_position:5,description:"With pre-compilation, Violet apps naturally become multiplatform and can run smoothly on different operating systems including Windows, Linux, macOS and more."},sidebar:"violetSidebar",previous:{title:"Universal Compatibility Layer",permalink:"/docs/technical/universal-compatibility-layer"},next:{title:"I/O Nano-Manager",permalink:"/docs/technical/iona"}},s={},p=[{value:"How Does Pre-Compilation Work?",id:"how-does-pre-compilation-work",level:2},{value:"Multi-Platform and Multi-Compatibility",id:"multi-platform-and-multi-compatibility",level:3},{value:"Optimized Apps",id:"optimized-apps",level:3},{value:"Efficient Build Process",id:"efficient-build-process",level:3},{value:"Compatibility with non-Violet Operating Systems",id:"compatibility-with-non-violet-operating-systems",level:2}],c={toc:p},m="wrapper";function u(e){let{components:t,...i}=e;return(0,o.kt)(m,(0,n.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"pre-compiling"},"Pre-Compiling"),(0,o.kt)("p",null,"Traditionally, software programs are distributed as binaries specific to a particular\nplatform, such as Windows, Linux, macOS, and to a particular architecture, such as x86 or\nARM. This can lead to limited availability and compatibility for users on different\nsystems."),(0,o.kt)("p",null,"To meet chis challenge and provide a more stable and secure environment for native programs, Violet offers a approach. In this approach, Violet applications are distributed as Violet Pre-compiled Programs (VPP) using a special low-level language called Rosa."),(0,o.kt)("h2",{id:"how-does-pre-compilation-work"},"How Does Pre-Compilation Work?"),(0,o.kt)("p",null,"Rosa represents the foundation of Violet's pre-compilation process. It involves compressing very low-level source files already created on the machine where the application will run."),(0,o.kt)("h3",{id:"multi-platform-and-multi-compatibility"},"Multi-Platform and Multi-Compatibility"),(0,o.kt)("p",null,"With pre-compilation, Violet apps naturally become multiplatform and can run smoothly on\ndifferent operating systems including Windows, Linux, macOS and more."),(0,o.kt)("h3",{id:"optimized-apps"},"Optimized Apps"),(0,o.kt)("p",null,"Precompiled Violet apps are specifically optimized for the target machine they will run\non. This optimization allows programs to take full advantage of the system's\ncapabilities, resulting in improved performance and efficiency. By adapting the\napplication to the target architecture, Violet enables users to get the best possible\nperformance on their machines."),(0,o.kt)("h3",{id:"efficient-build-process"},"Efficient Build Process"),(0,o.kt)("p",null,"Despite advanced optimizations applied during pre-compile, Violet maintains an efficient\nbuild process. VPP files can be compiled quickly, allowing users to install and run\napplications without significant delays or long wait times."),(0,o.kt)("h2",{id:"compatibility-with-non-violet-operating-systems"},"Compatibility with non-Violet Operating Systems"),(0,o.kt)("p",null,"Being a multiplatform technology, Rosa can also be run on non-Violet operating systems\nusing a lightweight wrapper provided by Violet. Available for download from Violet's\nwebsite, this wrapper allows users to run Violet apps on their preferred platforms, even\nif those platforms are not natively supported by Violet."),(0,o.kt)("p",null,"While Rosa itself is multiplatform, it's important to note that Violet apps take\nadvantage of the unique and ultra-beautiful features of the Violet ecosystem. As a\nresult, running these applications on non-Violet operating systems requires installing\nthe full package provided by Violet. This allows users to fully experience the rich\ncapabilities and seamless integration that the Violet platform has to offer."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"As Violet continues to evolve, updates and improvements may be made available\nduring the pre-build process and in the Rosa language. Stay connected with the Violet\ncommunity and visit the official website for the latest developments and updates.")))}u.isMDXComponent=!0}}]);