"use strict";(self.webpackChunkviolet_eco_github_io=self.webpackChunkviolet_eco_github_io||[]).push([[3572],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),l=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return i.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},v=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=l(n),v=a,h=p["".concat(s,".").concat(v)]||p[v]||u[v]||r;return n?i.createElement(h,o(o({ref:t},d),{},{components:n})):i.createElement(h,o({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=v;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:a,o[1]=c;for(var l=2;l<r;l++)o[l]=n[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}v.displayName="MDXCreateElement"},3097:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var i=n(7462),a=(n(7294),n(3905));const r={slug:"devices",sidebar_position:7,description:"Devices are critical in providing many operations and interactions in the Violet system."},o="Devices",c={unversionedId:"technical/devices",id:"technical/devices",title:"Devices",description:"Devices are critical in providing many operations and interactions in the Violet system.",source:"@site/docs/technical/devices.md",sourceDirName:"technical",slug:"/technical/devices",permalink:"/docs/technical/devices",draft:!1,editUrl:"https://github.com/violet-eco/docs/tree/main/docs/docs/technical/devices.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{slug:"devices",sidebar_position:7,description:"Devices are critical in providing many operations and interactions in the Violet system."},sidebar:"violetSidebar",previous:{title:"I/O Nano-Manager",permalink:"/docs/technical/iona"},next:{title:"Processes",permalink:"/docs/technical/processes"}},s={},l=[{value:"Connecting a New Device",id:"connecting-a-new-device",level:2},{value:"Interacting With a Device",id:"interacting-with-a-device",level:2},{value:"Device Integration file Persistence",id:"device-integration-file-persistence",level:2},{value:"Custom Device Integration File Name",id:"custom-device-integration-file-name",level:2},{value:"Device Management Interface",id:"device-management-interface",level:2}],d={toc:l},p="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"devices"},"Devices"),(0,a.kt)("p",null,"Devices are critical in enhancing the operation of Violet. These physical components,\nwhich range from cameras and microphones to storage disks and network adapters, are\nrequired for a variety of tasks and interactions. Violet uses Device Integration Files\n(DIFs) to provide a uniform interface for easy device integration in order to properly\nmanage various devices."),(0,a.kt)("h2",{id:"connecting-a-new-device"},"Connecting a New Device"),(0,a.kt)("p",null,"Violet creates a Device Integration File (DIF) in the ",(0,a.kt)("inlineCode",{parentName:"p"},"/dev")," directory when you connect a\nnew device to your computer. DIF placement and configuration may differ based on the\ndevice type. A hard drive, for example, may have a DIF path like ",(0,a.kt)("inlineCode",{parentName:"p"},"/dev/sst/b0b4"),". These\nfilenames are unique and random, with the format ",(0,a.kt)("inlineCode",{parentName:"p"},"[a-z][0-9][a-z][0-9]"),"\n(lowercase, digit, lowercase again, and then another digit)."),(0,a.kt)("h2",{id:"interacting-with-a-device"},"Interacting With a Device"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"/docs/specs/services/hw"},(0,a.kt)("inlineCode",{parentName:"a"},"sys::hw"))," service is used to interact with devices by applications and system services."),(0,a.kt)("p",null,"For uncategorized devices (in ",(0,a.kt)("inlineCode",{parentName:"p"},"/dev/etc"),"), a popup is shown to the user, to indicate\nthe connected device is not recognized."),(0,a.kt)("h2",{id:"device-integration-file-persistence"},"Device Integration file Persistence"),(0,a.kt)("p",null,"When you disconnect a device, the Device Integration File (DIF) linked with it is not\ninstantly deleted. When a process tries to interact with the DIF; the ",(0,a.kt)("inlineCode",{parentName:"p"},"sys::hw")," service\nreports that the device is not currently connected. This enables apps to save the\ndevice's location and association for future usage."),(0,a.kt)("p",null,"When the device is reconnected, it is linked with the same DIF, guaranteeing consistency\nand keeping the device's reference in the system."),(0,a.kt)("h2",{id:"custom-device-integration-file-name"},"Custom Device Integration File Name"),(0,a.kt)("p",null,"Violet allows Violetians to define Device Integration File (DIF) Names, adding a\ncustomized touch to the device management experience. Violetians may utilize this\nfunctionality to provide DIFs distinctive names, ensuring easy connection with apps."),(0,a.kt)("p",null,"When a DIF is given a custom name, Violet produces a new DIF file and correlates it with\nthe original, retaining compatibility with apps that rely on the original DIF. This\napproach enables users to get benefits of customizable naming conventions without\nsacrificing functionality. The original DIF and the modified DIF both provide the same\ncapability and features to the underlying device."),(0,a.kt)("p",null,"Custom DIF names must be more than four characters long to provide clarity and system\nconsistency. The simple rule identifies custom DIFs from those created automatically,\ndelivering a consistent experience throughout the operating system."),(0,a.kt)("h2",{id:"device-management-interface"},"Device Management Interface"),(0,a.kt)("p",null,"Violet features a device management interface available through the\n",(0,a.kt)("a",{parentName:"p",href:"/docs/applications/settings"},"Settings")," application to simplify device management and\nstreamline user interactions. Violetians can easily setup, debug and update drivers,\nwhich gives them instant access to all connected devices."))}u.isMDXComponent=!0}}]);