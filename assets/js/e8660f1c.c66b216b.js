"use strict";(self.webpackChunkviolet_eco_github_io=self.webpackChunkviolet_eco_github_io||[]).push([[6176],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(r),h=o,m=u["".concat(c,".").concat(h)]||u[h]||d[h]||a;return r?n.createElement(m,s(s({ref:t},l),{},{components:r})):n.createElement(m,s({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},8255:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={slug:"iona",sidebar_position:6,description:"The Input/Output Nano-manager, also known as Iona, is an integral part of the Violet system responsible for handling input/output requests from processes."},s="I/O Nano-Manager",i={unversionedId:"technical/iona",id:"technical/iona",title:"I/O Nano-Manager",description:"The Input/Output Nano-manager, also known as Iona, is an integral part of the Violet system responsible for handling input/output requests from processes.",source:"@site/docs/technical/iona.md",sourceDirName:"technical",slug:"/technical/iona",permalink:"/docs/technical/iona",draft:!1,editUrl:"https://github.com/violet-eco/docs/tree/main/docs/docs/technical/iona.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{slug:"iona",sidebar_position:6,description:"The Input/Output Nano-manager, also known as Iona, is an integral part of the Violet system responsible for handling input/output requests from processes."},sidebar:"violetSidebar",previous:{title:"Pre-Compiling",permalink:"/docs/technical/pre-compiling"},next:{title:"Devices",permalink:"/docs/technical/devices"}},c={},p=[{value:"Hardware Access",id:"hardware-access",level:2},{value:"Requests Priority",id:"requests-priority",level:3}],l={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"io-nano-manager"},"I/O Nano-Manager"),(0,o.kt)("p",null,"The Input/Output Nano-manager, also known as ",(0,o.kt)("em",{parentName:"p"},"Iona"),", is an integral part of the\nViolet system responsible for handling input/output requests from processes. It serves\nas the intermediary between processes and the underlying hardware, managing and\ncoordinating the flow of data between them."),(0,o.kt)("p",null,"Iona is represented by the ",(0,o.kt)("a",{parentName:"p",href:"/docs/specs/services/hw"},(0,o.kt)("inlineCode",{parentName:"a"},"sys::hw"))," service, which provides a\nunified interface for accessing and controlling various hardware devices within the system."),(0,o.kt)("h2",{id:"hardware-access"},"Hardware Access"),(0,o.kt)("p",null,"When a process needs to access hardware resources, such as storage devices or network\ninterfaces, it sends its request to Iona. Iona acts as the gatekeeper, deciding whether\nto grant or deny the requested access based on predefined rules and permissions."),(0,o.kt)("p",null,"System services, such as ",(0,o.kt)("a",{parentName:"p",href:"/docs/specs/services/fs"},(0,o.kt)("inlineCode",{parentName:"a"},"sys::fs"))," for file system operations or ",(0,o.kt)("a",{parentName:"p",href:"/docs/specs/services/net"},(0,o.kt)("inlineCode",{parentName:"a"},"sys::net"))," for network communication, rely on Iona to\ninteract with the corresponding hardware devices."),(0,o.kt)("h3",{id:"requests-priority"},"Requests Priority"),(0,o.kt)("p",null,"To ensure efficient resource utilization, Iona handles the requests from processes based\non their priority. The priority of a request is determined either by the arrival\ntimestamp of the request or the priority assigned to the process making the request."),(0,o.kt)("p",null,"In this way, Iona can optimize the allocation of hardware resources and give precedence\nto higher-priority processes or time-sensitive operations. This prioritization mechanism\nhelps ensure smooth and responsive I/O operations throughout the system."))}d.isMDXComponent=!0}}]);