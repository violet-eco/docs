"use strict";(self.webpackChunkviolet_eco_github_io=self.webpackChunkviolet_eco_github_io||[]).push([[3848],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),d=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=d(r),f=i,m=p["".concat(l,".").concat(f)]||p[f]||u[f]||a;return r?n.createElement(m,o(o({ref:t},s),{},{components:r})):n.createElement(m,o({ref:t},s))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:i,o[1]=c;for(var d=2;d<a;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},8397:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var n=r(7462),i=(r(7294),r(3905));const a={slug:"hardware",sidebar_position:1,description:"Devices are detected during the boot process and then periodically after startup."},o="Hardware Interaction",c={unversionedId:"specs/kernel/hardware",id:"specs/kernel/hardware",title:"Hardware Interaction",description:"Devices are detected during the boot process and then periodically after startup.",source:"@site/docs/specs/kernel/hardware.md",sourceDirName:"specs/kernel",slug:"/specs/kernel/hardware",permalink:"/docs/specs/kernel/hardware",draft:!1,editUrl:"https://github.com/violet-eco/docs/tree/main/docs/docs/specs/kernel/hardware.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"hardware",sidebar_position:1,description:"Devices are detected during the boot process and then periodically after startup."},sidebar:"violetSidebar",previous:{title:"Kernel",permalink:"/docs/specs/kernel/"},next:{title:"Kernel-Process Communication",permalink:"/docs/specs/kernel/kpc"}},l={},d=[{value:"Hardware Detection",id:"hardware-detection",level:2},{value:"Connection Interface Identifier",id:"connection-interface-identifier",level:2},{value:"Connection-Specific Device Descriptor",id:"connection-specific-device-descriptor",level:2},{value:"Kernel Device Identifier",id:"kernel-device-identifier",level:2},{value:"Raw Device Descriptor",id:"raw-device-descriptor",level:2}],s={toc:d},p="wrapper";function u(e){let{components:t,...r}=e;return(0,i.kt)(p,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"hardware-interaction"},"Hardware Interaction"),(0,i.kt)("h2",{id:"hardware-detection"},"Hardware Detection"),(0,i.kt)("p",null,"Devices are detected during the boot process and then periodically after startup.\nThis allows to hotplug some additional devices afterwards."),(0,i.kt)("p",null,"Not every device uses the same connection protocol,\ndetection varies by connection:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"PCI-Express devices are detected through their Configuration Space"),(0,i.kt)("li",{parentName:"ul"},"IDE/SATA devices are detected through the IDE/SATA controller"),(0,i.kt)("li",{parentName:"ul"},"USB devices are enumerated through the USB protocol stack")),(0,i.kt)("h2",{id:"connection-interface-identifier"},"Connection Interface Identifier"),(0,i.kt)("p",null,"The Connection Interface Identifier (CII) is a 4-byte number describing what a device is connected to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Connection type (1 byte)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"0x01"),": PCI-Express"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"0x02"),": IDE"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"0x03"),": SATA"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"0x04"),": M.2"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"0x05"),": USB"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"0x06"),": RGB"))),(0,i.kt)("li",{parentName:"ul"},"Bus number (1 byte)"),(0,i.kt)("li",{parentName:"ul"},"Port number (2 bytes)")),(0,i.kt)("h2",{id:"connection-specific-device-descriptor"},"Connection-Specific Device Descriptor"),(0,i.kt)("p",null,"All hardware devices output an identifier whose format is\nnormalized depending on the connection type (PCI-Express, IDE, SATA, ...).\nThis identifier is called the connection-specific device descriptor (CSDD)."),(0,i.kt)("h2",{id:"kernel-device-identifier"},"Kernel Device Identifier"),(0,i.kt)("p",null,"The kernel device identifier (KDI) is an 8-byte identifier\ncomputed from the ",(0,i.kt)("a",{parentName:"p",href:"#connection-interface-identifier"},"CII"),"\nand the ",(0,i.kt)("a",{parentName:"p",href:"#connection-specific-device-descriptor"},"CSDD"),".\nIt is unique accross all devices."),(0,i.kt)("h2",{id:"raw-device-descriptor"},"Raw Device Descriptor"),(0,i.kt)("p",null,"RDD is a data structure made of the followings:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#kernel-device-identifier"},"KDI")," (8 bytes)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#connection-interface-identifier"},"CII")," (4 bytes)"),(0,i.kt)("li",{parentName:"ul"},"size of the CSDD (1 byte)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#connection-specific-device-descriptor"},"CSDD")," (up to 256 bytes)")))}u.isMDXComponent=!0}}]);